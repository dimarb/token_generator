{
  "name": "Votations",
  "desc": "",
  "methods": [
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    },
    {
      "name": "reigsterCandidate",
      "args": [
        {
          "name": "address",
          "type": "address"
        },
        {
          "name": "fistName",
          "type": "string"
        },
        {
          "name": "lastName",
          "type": "string"
        },
        {
          "name": "email",
          "type": "string"
        },
        {
          "name": "phone",
          "type": "string"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "vote",
      "args": [
        {
          "name": "candidate",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "getVotes",
      "args": [
        {
          "name": "candidate",
          "type": "address"
        }
      ],
      "returns": {
        "type": "(string,string,string,string,uint8)",
        "struct": "CandidateInfo"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {
    "CandidateInfo": {
      "fistName": "string",
      "lastName": "string",
      "email": "string",
      "phone": "string",
      "votes": "uint8"
    }
  },
  "state": {
    "schema": {
      "global": {
        "bytes": 1,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {
        "owner": {
          "key": "b3duZXI=",
          "keyType": "bytes",
          "valueType": "address"
        }
      },
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {
        "dataCandidate": {
          "keyType": "address",
          "valueType": "CandidateInfo"
        }
      }
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": [
    {
      "teal": 1,
      "source": 5,
      "pc": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14
      ]
    },
    {
      "teal": 13,
      "source": 5,
      "pc": [
        15,
        16
      ]
    },
    {
      "teal": 14,
      "source": 5,
      "pc": [
        17
      ]
    },
    {
      "teal": 15,
      "source": 5,
      "pc": [
        18,
        19
      ]
    },
    {
      "teal": 16,
      "source": 5,
      "pc": [
        20
      ]
    },
    {
      "teal": 17,
      "source": 5,
      "pc": [
        21,
        22
      ]
    },
    {
      "teal": 18,
      "source": 5,
      "pc": [
        23
      ]
    },
    {
      "teal": 19,
      "source": 5,
      "pc": [
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49
      ]
    },
    {
      "teal": 23,
      "source": 5,
      "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
      "pc": [
        50
      ]
    },
    {
      "teal": 28,
      "source": 11,
      "pc": [
        51,
        52,
        53
      ]
    },
    {
      "teal": 29,
      "source": 11,
      "pc": [
        54
      ]
    },
    {
      "teal": 30,
      "source": 11,
      "pc": [
        55
      ]
    },
    {
      "teal": 34,
      "source": 11,
      "pc": [
        56,
        57,
        58
      ]
    },
    {
      "teal": 38,
      "source": 12,
      "pc": [
        59
      ]
    },
    {
      "teal": 39,
      "source": 12,
      "pc": [
        60,
        61,
        62
      ]
    },
    {
      "teal": 40,
      "source": 12,
      "pc": [
        63,
        64
      ]
    },
    {
      "teal": 41,
      "source": 12,
      "pc": [
        65
      ]
    },
    {
      "teal": 42,
      "source": 12,
      "pc": [
        66
      ]
    },
    {
      "teal": 43,
      "source": 11,
      "pc": [
        67
      ]
    },
    {
      "teal": 48,
      "source": 16,
      "pc": [
        68,
        69,
        70
      ]
    },
    {
      "teal": 49,
      "source": 16,
      "pc": [
        71,
        72,
        73
      ]
    },
    {
      "teal": 52,
      "source": 16,
      "pc": [
        74,
        75,
        76
      ]
    },
    {
      "teal": 53,
      "source": 16,
      "pc": [
        77,
        78,
        79
      ]
    },
    {
      "teal": 56,
      "source": 16,
      "pc": [
        80,
        81,
        82
      ]
    },
    {
      "teal": 57,
      "source": 16,
      "pc": [
        83,
        84,
        85
      ]
    },
    {
      "teal": 60,
      "source": 16,
      "pc": [
        86,
        87,
        88
      ]
    },
    {
      "teal": 61,
      "source": 16,
      "pc": [
        89,
        90,
        91
      ]
    },
    {
      "teal": 64,
      "source": 16,
      "pc": [
        92,
        93,
        94
      ]
    },
    {
      "teal": 65,
      "source": 16,
      "pc": [
        95
      ]
    },
    {
      "teal": 66,
      "source": 16,
      "pc": [
        96
      ]
    },
    {
      "teal": 67,
      "source": 16,
      "pc": [
        97
      ]
    },
    {
      "teal": 68,
      "source": 16,
      "pc": [
        98
      ]
    },
    {
      "teal": 71,
      "source": 16,
      "errorMessage": "argument 4 (address) for reigsterCandidate must be a address",
      "pc": [
        99
      ]
    },
    {
      "teal": 74,
      "source": 16,
      "pc": [
        100,
        101,
        102
      ]
    },
    {
      "teal": 75,
      "source": 16,
      "pc": [
        103
      ]
    },
    {
      "teal": 76,
      "source": 16,
      "pc": [
        104
      ]
    },
    {
      "teal": 80,
      "source": 16,
      "pc": [
        105,
        106,
        107
      ]
    },
    {
      "teal": 84,
      "source": 17,
      "pc": [
        108
      ]
    },
    {
      "teal": 85,
      "source": 17,
      "pc": [
        109
      ]
    },
    {
      "teal": 86,
      "source": 17,
      "pc": [
        110,
        111
      ]
    },
    {
      "teal": 87,
      "source": 17,
      "pc": [
        112
      ]
    },
    {
      "teal": 90,
      "source": 17,
      "errorMessage": "Only the owner can register a candidate",
      "pc": [
        113
      ]
    },
    {
      "teal": 94,
      "source": 18,
      "pc": [
        114,
        115
      ]
    },
    {
      "teal": 95,
      "source": 18,
      "pc": [
        116
      ]
    },
    {
      "teal": 96,
      "source": 18,
      "pc": [
        117
      ]
    },
    {
      "teal": 97,
      "source": 18,
      "pc": [
        118
      ]
    },
    {
      "teal": 98,
      "source": 18,
      "pc": [
        119
      ]
    },
    {
      "teal": 101,
      "source": 18,
      "errorMessage": "The candidate is already registered",
      "pc": [
        120
      ]
    },
    {
      "teal": 111,
      "source": 19,
      "pc": [
        121,
        122
      ]
    },
    {
      "teal": 112,
      "source": 19,
      "pc": [
        123
      ]
    },
    {
      "teal": 113,
      "source": 19,
      "pc": [
        124
      ]
    },
    {
      "teal": 114,
      "source": 19,
      "pc": [
        125
      ]
    },
    {
      "teal": 115,
      "source": 19,
      "pc": [
        126
      ]
    },
    {
      "teal": 116,
      "source": 19,
      "pc": [
        127
      ]
    },
    {
      "teal": 117,
      "source": 19,
      "pc": [
        128,
        129,
        130,
        131
      ]
    },
    {
      "teal": 118,
      "source": 20,
      "pc": [
        132,
        133
      ]
    },
    {
      "teal": 119,
      "source": 20,
      "pc": [
        134
      ]
    },
    {
      "teal": 120,
      "source": 20,
      "pc": [
        135
      ]
    },
    {
      "teal": 121,
      "source": 20,
      "pc": [
        136
      ]
    },
    {
      "teal": 122,
      "source": 20,
      "pc": [
        137,
        138,
        139
      ]
    },
    {
      "teal": 123,
      "source": 20,
      "pc": [
        140
      ]
    },
    {
      "teal": 124,
      "source": 20,
      "pc": [
        141
      ]
    },
    {
      "teal": 125,
      "source": 20,
      "pc": [
        142,
        143,
        144
      ]
    },
    {
      "teal": 126,
      "source": 21,
      "pc": [
        145,
        146
      ]
    },
    {
      "teal": 127,
      "source": 21,
      "pc": [
        147
      ]
    },
    {
      "teal": 128,
      "source": 21,
      "pc": [
        148
      ]
    },
    {
      "teal": 129,
      "source": 21,
      "pc": [
        149
      ]
    },
    {
      "teal": 130,
      "source": 21,
      "pc": [
        150,
        151,
        152
      ]
    },
    {
      "teal": 131,
      "source": 21,
      "pc": [
        153
      ]
    },
    {
      "teal": 132,
      "source": 21,
      "pc": [
        154
      ]
    },
    {
      "teal": 133,
      "source": 21,
      "pc": [
        155,
        156,
        157
      ]
    },
    {
      "teal": 134,
      "source": 22,
      "pc": [
        158,
        159
      ]
    },
    {
      "teal": 135,
      "source": 22,
      "pc": [
        160
      ]
    },
    {
      "teal": 136,
      "source": 22,
      "pc": [
        161
      ]
    },
    {
      "teal": 137,
      "source": 22,
      "pc": [
        162
      ]
    },
    {
      "teal": 138,
      "source": 22,
      "pc": [
        163,
        164,
        165
      ]
    },
    {
      "teal": 139,
      "source": 22,
      "pc": [
        166
      ]
    },
    {
      "teal": 140,
      "source": 22,
      "pc": [
        167
      ]
    },
    {
      "teal": 141,
      "source": 22,
      "pc": [
        168,
        169,
        170
      ]
    },
    {
      "teal": 142,
      "source": 23,
      "pc": [
        171,
        172
      ]
    },
    {
      "teal": 143,
      "source": 23,
      "pc": [
        173
      ]
    },
    {
      "teal": 144,
      "source": 23,
      "pc": [
        174
      ]
    },
    {
      "teal": 145,
      "source": 23,
      "pc": [
        175
      ]
    },
    {
      "teal": 146,
      "source": 23,
      "pc": [
        176,
        177,
        178
      ]
    },
    {
      "teal": 147,
      "source": 23,
      "pc": [
        179
      ]
    },
    {
      "teal": 148,
      "source": 23,
      "pc": [
        180
      ]
    },
    {
      "teal": 149,
      "source": 23,
      "pc": [
        181,
        182,
        183
      ]
    },
    {
      "teal": 150,
      "source": 24,
      "pc": [
        184,
        185,
        186
      ]
    },
    {
      "teal": 151,
      "source": 24,
      "pc": [
        187,
        188,
        189
      ]
    },
    {
      "teal": 152,
      "source": 19,
      "pc": [
        190
      ]
    },
    {
      "teal": 153,
      "source": 19,
      "pc": [
        191
      ]
    },
    {
      "teal": 154,
      "source": 19,
      "pc": [
        192
      ]
    },
    {
      "teal": 155,
      "source": 16,
      "pc": [
        193
      ]
    },
    {
      "teal": 160,
      "source": 29,
      "pc": [
        194,
        195,
        196
      ]
    },
    {
      "teal": 161,
      "source": 29,
      "pc": [
        197
      ]
    },
    {
      "teal": 162,
      "source": 29,
      "pc": [
        198
      ]
    },
    {
      "teal": 163,
      "source": 29,
      "pc": [
        199
      ]
    },
    {
      "teal": 164,
      "source": 29,
      "pc": [
        200
      ]
    },
    {
      "teal": 167,
      "source": 29,
      "errorMessage": "argument 0 (candidate) for vote must be a address",
      "pc": [
        201
      ]
    },
    {
      "teal": 170,
      "source": 29,
      "pc": [
        202,
        203,
        204
      ]
    },
    {
      "teal": 171,
      "source": 29,
      "pc": [
        205
      ]
    },
    {
      "teal": 172,
      "source": 29,
      "pc": [
        206
      ]
    },
    {
      "teal": 176,
      "source": 29,
      "pc": [
        207,
        208,
        209
      ]
    },
    {
      "teal": 180,
      "source": 30,
      "pc": [
        210,
        211
      ]
    },
    {
      "teal": 181,
      "source": 30,
      "pc": [
        212
      ]
    },
    {
      "teal": 182,
      "source": 30,
      "pc": [
        213
      ]
    },
    {
      "teal": 183,
      "source": 30,
      "pc": [
        214
      ]
    },
    {
      "teal": 186,
      "source": 30,
      "errorMessage": "Canditae no registered",
      "pc": [
        215
      ]
    },
    {
      "teal": 190,
      "source": 31,
      "pc": [
        216,
        217
      ]
    },
    {
      "teal": 191,
      "source": 31,
      "pc": [
        218
      ]
    },
    {
      "teal": 194,
      "source": 31,
      "errorMessage": "box value does not exist: this.dataCandidate(candidate).value",
      "pc": [
        219
      ]
    },
    {
      "teal": 195,
      "source": 31,
      "pc": [
        220,
        221
      ]
    },
    {
      "teal": 196,
      "source": 31,
      "pc": [
        222,
        223
      ]
    },
    {
      "teal": 197,
      "source": 31,
      "pc": [
        224
      ]
    },
    {
      "teal": 198,
      "source": 31,
      "pc": [
        225,
        226
      ]
    },
    {
      "teal": 199,
      "source": 31,
      "pc": [
        227
      ]
    },
    {
      "teal": 202,
      "source": 31,
      "errorMessage": "box value does not exist: this.dataCandidate(candidate).value",
      "pc": [
        228
      ]
    },
    {
      "teal": 203,
      "source": 31,
      "pc": [
        229,
        230
      ]
    },
    {
      "teal": 204,
      "source": 31,
      "pc": [
        231,
        232
      ]
    },
    {
      "teal": 205,
      "source": 31,
      "pc": [
        233,
        234,
        235
      ]
    },
    {
      "teal": 206,
      "source": 31,
      "pc": [
        236
      ]
    },
    {
      "teal": 207,
      "source": 31,
      "pc": [
        237
      ]
    },
    {
      "teal": 208,
      "source": 31,
      "pc": [
        238
      ]
    },
    {
      "teal": 209,
      "source": 31,
      "pc": [
        239
      ]
    },
    {
      "teal": 210,
      "source": 31,
      "pc": [
        240
      ]
    },
    {
      "teal": 211,
      "source": 31,
      "pc": [
        241
      ]
    },
    {
      "teal": 212,
      "source": 31,
      "pc": [
        242
      ]
    },
    {
      "teal": 213,
      "source": 31,
      "pc": [
        243
      ]
    },
    {
      "teal": 216,
      "source": 31,
      "errorMessage": "this.dataCandidate(candidate).value.votes + 1 overflowed 8 bits",
      "pc": [
        244
      ]
    },
    {
      "teal": 217,
      "source": 31,
      "pc": [
        245,
        246,
        247
      ]
    },
    {
      "teal": 218,
      "source": 31,
      "pc": [
        248
      ]
    },
    {
      "teal": 219,
      "source": 31,
      "pc": [
        249,
        250
      ]
    },
    {
      "teal": 220,
      "source": 31,
      "pc": [
        251
      ]
    },
    {
      "teal": 221,
      "source": 31,
      "pc": [
        252
      ]
    },
    {
      "teal": 222,
      "source": 31,
      "pc": [
        253
      ]
    },
    {
      "teal": 223,
      "source": 31,
      "pc": [
        254
      ]
    },
    {
      "teal": 224,
      "source": 31,
      "pc": [
        255
      ]
    },
    {
      "teal": 225,
      "source": 29,
      "pc": [
        256
      ]
    },
    {
      "teal": 230,
      "source": 34,
      "pc": [
        257,
        258,
        259,
        260,
        261,
        262
      ]
    },
    {
      "teal": 233,
      "source": 34,
      "pc": [
        263,
        264,
        265
      ]
    },
    {
      "teal": 234,
      "source": 34,
      "pc": [
        266
      ]
    },
    {
      "teal": 235,
      "source": 34,
      "pc": [
        267
      ]
    },
    {
      "teal": 236,
      "source": 34,
      "pc": [
        268
      ]
    },
    {
      "teal": 237,
      "source": 34,
      "pc": [
        269
      ]
    },
    {
      "teal": 240,
      "source": 34,
      "errorMessage": "argument 0 (candidate) for getVotes must be a address",
      "pc": [
        270
      ]
    },
    {
      "teal": 243,
      "source": 34,
      "pc": [
        271,
        272,
        273
      ]
    },
    {
      "teal": 244,
      "source": 34,
      "pc": [
        274
      ]
    },
    {
      "teal": 245,
      "source": 34,
      "pc": [
        275
      ]
    },
    {
      "teal": 246,
      "source": 34,
      "pc": [
        276
      ]
    },
    {
      "teal": 247,
      "source": 34,
      "pc": [
        277
      ]
    },
    {
      "teal": 251,
      "source": 34,
      "pc": [
        278,
        279,
        280
      ]
    },
    {
      "teal": 255,
      "source": 35,
      "pc": [
        281,
        282
      ]
    },
    {
      "teal": 256,
      "source": 35,
      "pc": [
        283
      ]
    },
    {
      "teal": 259,
      "source": 35,
      "errorMessage": "box value does not exist: this.dataCandidate(candidate).value",
      "pc": [
        284
      ]
    },
    {
      "teal": 260,
      "source": 34,
      "pc": [
        285
      ]
    },
    {
      "teal": 263,
      "source": 5,
      "pc": [
        286,
        287,
        288,
        289,
        290,
        291
      ]
    },
    {
      "teal": 264,
      "source": 5,
      "pc": [
        292,
        293,
        294
      ]
    },
    {
      "teal": 265,
      "source": 5,
      "pc": [
        295,
        296,
        297,
        298
      ]
    },
    {
      "teal": 268,
      "source": 5,
      "errorMessage": "this contract does not implement the given ABI method for create NoOp",
      "pc": [
        299
      ]
    },
    {
      "teal": 271,
      "source": 5,
      "pc": [
        300,
        301,
        302,
        303,
        304,
        305
      ]
    },
    {
      "teal": 272,
      "source": 5,
      "pc": [
        306,
        307,
        308,
        309,
        310,
        311
      ]
    },
    {
      "teal": 273,
      "source": 5,
      "pc": [
        312,
        313,
        314,
        315,
        316,
        317
      ]
    },
    {
      "teal": 274,
      "source": 5,
      "pc": [
        318,
        319,
        320
      ]
    },
    {
      "teal": 275,
      "source": 5,
      "pc": [
        321,
        322,
        323,
        324,
        325,
        326,
        327,
        328
      ]
    },
    {
      "teal": 278,
      "source": 5,
      "errorMessage": "this contract does not implement the given ABI method for call NoOp",
      "pc": [
        329
      ]
    },
    {
      "teal": 281,
      "source": 5,
      "pc": [
        330,
        331,
        332
      ]
    },
    {
      "teal": 282,
      "source": 5,
      "pc": [
        333,
        334
      ]
    },
    {
      "teal": 283,
      "source": 5,
      "pc": [
        335,
        336
      ]
    },
    {
      "teal": 284,
      "source": 5,
      "pc": [
        337
      ]
    },
    {
      "teal": 285,
      "source": 5,
      "pc": [
        338,
        339
      ]
    },
    {
      "teal": 286,
      "source": 5,
      "pc": [
        340,
        341
      ]
    },
    {
      "teal": 287,
      "source": 5,
      "pc": [
        342
      ]
    },
    {
      "teal": 290,
      "source": 5,
      "pc": [
        343,
        344,
        345
      ]
    },
    {
      "teal": 291,
      "source": 5,
      "pc": [
        346,
        347
      ]
    },
    {
      "teal": 292,
      "source": 5,
      "pc": [
        348,
        349
      ]
    },
    {
      "teal": 293,
      "source": 5,
      "pc": [
        350
      ]
    },
    {
      "teal": 294,
      "source": 5,
      "pc": [
        351,
        352
      ]
    },
    {
      "teal": 295,
      "source": 5,
      "pc": [
        353,
        354
      ]
    },
    {
      "teal": 296,
      "source": 5,
      "pc": [
        355
      ]
    },
    {
      "teal": 297,
      "source": 5,
      "pc": [
        356
      ]
    },
    {
      "teal": 298,
      "source": 5,
      "pc": [
        357,
        358
      ]
    },
    {
      "teal": 299,
      "source": 5,
      "pc": [
        359
      ]
    },
    {
      "teal": 300,
      "source": 5,
      "pc": [
        360
      ]
    },
    {
      "teal": 301,
      "source": 5,
      "pc": [
        361
      ]
    },
    {
      "teal": 302,
      "source": 5,
      "pc": [
        362,
        363,
        364
      ]
    },
    {
      "teal": 303,
      "source": 5,
      "pc": [
        365,
        366
      ]
    },
    {
      "teal": 304,
      "source": 5,
      "pc": [
        367,
        368
      ]
    },
    {
      "teal": 305,
      "source": 5,
      "pc": [
        369
      ]
    },
    {
      "teal": 306,
      "source": 5,
      "pc": [
        370
      ]
    },
    {
      "teal": 307,
      "source": 5,
      "pc": [
        371,
        372
      ]
    },
    {
      "teal": 308,
      "source": 5,
      "pc": [
        373,
        374
      ]
    },
    {
      "teal": 309,
      "source": 5,
      "pc": [
        375,
        376
      ]
    },
    {
      "teal": 310,
      "source": 5,
      "pc": [
        377,
        378
      ]
    },
    {
      "teal": 311,
      "source": 5,
      "pc": [
        379
      ]
    }
  ],
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiADASAIJgIFb3duZXIAMRgUgQYLMRkIjQwA+gAAAAAAAAAAAAAA7AAAAAAAAAAAAAAAiAACIkOKAAAoNjIAcgdIZ4k2GgVXAgA2GgRXAgA2GgNXAgA2GgJXAgA2GgFJFSMSRIgAAiJDigUAKGQxABJEi/+9TEgURIv/SbxIKSmAAgAJi/5JFRZXBgJMUIgAxov9SRUWVwYCTFCIALmL/EkVFlcGAkxQiACsi/tJFRZXBgJMUIgAn4ABAIgAjEhQv4k2GgFJFSMSRIgAAiJDigEAi/+9TEhEi/++RDX/NP8ki/++RDX/NP9XCAEXIggWSZMkDkRXBwFdi/9JvEhMv4mABBUffHU2GgFJFSMSRIgABFCwIkOKAQGL/75EiYAEuER7NjYaAI4B/wgAgASRIkTKgARijOMtgATrO7WANhoAjgP++/95/7gAigQDi/yL/1CL/Yv+iYoEA4v8i/5QjPyL/0kVi/4XCBZXBgKM/ov9TFCM/Yv8i/2L/ok=",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 25,
      "patch": 0,
      "commitHash": "9855f57c"
    }
  }
}