#pragma version 10

// This TEAL was generated by TEALScript v0.100.2
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
int 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	// The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?
	err

// createNFT(string,string)uint64
*abi_route_createNFT:
	// The ABI return prefix
	byte 0x151f7c75

	// unitName: string
	txna ApplicationArgs 2
	extract 2 0

	// name: string
	txna ApplicationArgs 1
	extract 2 0

	// execute createNFT(string,string)uint64
	callsub createNFT
	itob
	concat
	log
	int 1
	return

// createNFT(name: string, unitName: string): AssetID
createNFT:
	proto 2 1

	// contracts/TokenSeller.algo.ts:7
	// return sendAssetCreation({
	//       configAssetName: name,
	//       configAssetUnitName: unitName,
	//       configAssetTotal: 1, // NFT Ãºnico
	//     });
	itxn_begin
	int acfg
	itxn_field TypeEnum

	// contracts/TokenSeller.algo.ts:8
	// configAssetName: name
	frame_dig -1 // name: string
	itxn_field ConfigAssetName

	// contracts/TokenSeller.algo.ts:9
	// configAssetUnitName: unitName
	frame_dig -2 // unitName: string
	itxn_field ConfigAssetUnitName

	// contracts/TokenSeller.algo.ts:10
	// configAssetTotal: 1
	int 1
	itxn_field ConfigAssetTotal

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	itxn CreatedAssetID
	retsub

// transferNFT(uint64,address)void
*abi_route_transferNFT:
	// receiver: address
	txna ApplicationArgs 2
	dup
	len
	int 32
	==

	// argument 0 (receiver) for transferNFT must be a address
	assert

	// asset: uint64
	txna ApplicationArgs 1
	btoi

	// execute transferNFT(uint64,address)void
	callsub transferNFT
	int 1
	return

// transferNFT(asset: AssetID, receiver: Address): void
transferNFT:
	proto 2 0

	// contracts/TokenSeller.algo.ts:16
	// sendAssetTransfer({
	//       assetReceiver: receiver,
	//       assetAmount: 1, // Transferencia de un NFT
	//       xferAsset: asset,
	//     })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// contracts/TokenSeller.algo.ts:17
	// assetReceiver: receiver
	frame_dig -2 // receiver: Address
	itxn_field AssetReceiver

	// contracts/TokenSeller.algo.ts:18
	// assetAmount: 1
	int 1
	itxn_field AssetAmount

	// contracts/TokenSeller.algo.ts:19
	// xferAsset: asset
	frame_dig -1 // asset: AssetID
	itxn_field XferAsset

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

*abi_route_createApplication:
	int 1
	return

*create_NoOp:
	method "createApplication()void"
	txna ApplicationArgs 0
	match *abi_route_createApplication

	// this contract does not implement the given ABI method for create NoOp
	err

*call_NoOp:
	method "createNFT(string,string)uint64"
	method "transferNFT(uint64,address)void"
	txna ApplicationArgs 0
	match *abi_route_createNFT *abi_route_transferNFT

	// this contract does not implement the given ABI method for call NoOp
	err